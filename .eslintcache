[{"D:\\repos\\storade-example\\src\\index.js":"1","D:\\repos\\storade-example\\src\\App.js":"2","D:\\repos\\storade-example\\src\\Navbar\\Navbar.js":"3","D:\\repos\\storade-example\\src\\Navbar\\SidebarData.js":"4","D:\\repos\\storade-example\\src\\utils\\useWindowSize.jsx":"5","D:\\repos\\storade-example\\src\\content\\Content.js":"6","D:\\repos\\storade-example\\src\\card\\CardComp.js":"7","D:\\repos\\storade-example\\src\\orderCart\\OrderCart.js":"8","D:\\repos\\storade-example\\src\\orderCart\\OrderItem.js":"9"},{"size":506,"mtime":1608505277254,"results":"10","hashOfConfig":"11"},{"size":487,"mtime":1608548095038,"results":"12","hashOfConfig":"11"},{"size":1777,"mtime":1608483179384,"results":"13","hashOfConfig":"11"},{"size":481,"mtime":1608404669688,"results":"14","hashOfConfig":"11"},{"size":1149,"mtime":1608463026889,"results":"15","hashOfConfig":"11"},{"size":1534,"mtime":1608507476627,"results":"16","hashOfConfig":"11"},{"size":506,"mtime":1608546963556,"results":"17","hashOfConfig":"11"},{"size":1719,"mtime":1608561533178,"results":"18","hashOfConfig":"11"},{"size":484,"mtime":1608557170306,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1tvhz2g",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"D:\\repos\\storade-example\\src\\index.js",[],["42","43"],"D:\\repos\\storade-example\\src\\App.js",[],"D:\\repos\\storade-example\\src\\Navbar\\Navbar.js",["44","45"],"import React, { useEffect, useState } from \"react\";\r\nimport { SidebarData } from \"./SidebarData\";\r\nimport logo from \"../icons/logo.png\";\r\nimport useWindowSize from \"../utils/useWindowSize\";\r\nimport { Col } from \"react-bootstrap\";\r\n\r\nfunction Navbar() {\r\n  const [open, setOpen] = useState(true);\r\n  const screenWidth = useWindowSize().width;\r\n\r\n  useEffect(() => {\r\n    if (screenWidth < 768) {\r\n      setOpen(false);\r\n    }\r\n    if (screenWidth > 768) {\r\n      setOpen(true);\r\n    }\r\n  }, [screenWidth]);\r\n\r\n  const onClick = (e) => {\r\n    setOpen((open) => !open);\r\n  };\r\n\r\n  const responsiveCls = !open ? \"mobile\" : \"\";\r\n\r\n  return (\r\n    <Col className={`section-7 leftMenu ${responsiveCls}`}>\r\n      <div className=\"menuTop\">\r\n        <div onClick={(e) => onClick(e)} className={`icon-${responsiveCls}`}>\r\n          <span className=\"icon-svg-burger\"></span>\r\n        </div>\r\n      </div>\r\n      <div className=\"logo\">\r\n        <img src={logo}></img>\r\n      </div>\r\n      <div className=\"user\">\r\n        <span className=\"user-alt\">\r\n          <span className=\"icon-svg-head\"></span>\r\n          Halil Yıldızdal\r\n        </span>\r\n        <span className=\"icon-svg-logout\"></span>\r\n      </div>\r\n      <ul>\r\n        {SidebarData.map((item, index) => {\r\n          return (\r\n            <li className=\"menu-items\" key={index}>\r\n              <span\r\n                className={`icon-svg-${item.iconSvg} ${responsiveCls}`}\r\n              ></span>\r\n              <a href=\"#\">\r\n                <span>{item.title}</span>\r\n              </a>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      <div className=\"settings\">\r\n        <span className=\"icon-svg-settings\"> </span>\r\n        <span>Settings</span>\r\n      </div>\r\n    </Col>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","D:\\repos\\storade-example\\src\\Navbar\\SidebarData.js",[],"D:\\repos\\storade-example\\src\\utils\\useWindowSize.jsx",["46","47","48"],"import React, { useCallback, useEffect, useState } from \"react\";\r\n\r\nconst useWindowSize = (\r\n  withResizeListener = true,\r\n  callback = null,\r\n  dependencies = []\r\n) => {\r\n  const isClient = typeof window === \"object\";\r\n\r\n  const getSize = () => {\r\n    return {\r\n      width: isClient ? window.innerWidth : undefined,\r\n      height: isClient ? window.innerHeight : undefined,\r\n    };\r\n  };\r\n\r\n  const [windowSize, setWindowSize] = useState(getSize);\r\n\r\n  const handleResize = useCallback(() => {\r\n    setWindowSize(getSize());\r\n    if (callback) {\r\n      callback(windowSize);\r\n    }\r\n  }, []);\r\n\r\n  if (withResizeListener) {\r\n    useEffect(() => {\r\n      if (!isClient) {\r\n        return;\r\n      }\r\n\r\n      window.addEventListener(\"resize\", handleResize);\r\n      window.addEventListener(\"orientationchange\", handleResize);\r\n\r\n      return () => {\r\n        window.removeEventListener(\"resize\", handleResize);\r\n        window.removeEventListener(\"orientationchange\", handleResize);\r\n      };\r\n    }, dependencies); // Empty array ensures that effect is only run on mount and unmount\r\n  }\r\n\r\n  return windowSize;\r\n};\r\n\r\nexport default useWindowSize;\r\n",["49","50"],"D:\\repos\\storade-example\\src\\content\\Content.js",[],"D:\\repos\\storade-example\\src\\card\\CardComp.js",[],"D:\\repos\\storade-example\\src\\orderCart\\OrderCart.js",[],"D:\\repos\\storade-example\\src\\orderCart\\OrderItem.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":21,"column":14,"nodeType":"57","messageId":"58","endLine":21,"endColumn":18},{"ruleId":"59","severity":1,"message":"60","line":34,"column":9,"nodeType":"61","endLine":34,"endColumn":25},{"ruleId":"62","severity":1,"message":"63","line":24,"column":6,"nodeType":"64","endLine":24,"endColumn":8,"suggestions":"65"},{"ruleId":"62","severity":1,"message":"66","line":39,"column":8,"nodeType":"57","endLine":39,"endColumn":20},{"ruleId":"62","severity":1,"message":"67","line":39,"column":8,"nodeType":"57","endLine":39,"endColumn":20,"suggestions":"68"},{"ruleId":"51","replacedBy":"69"},{"ruleId":"53","replacedBy":"70"},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-shadow","'open' is already declared in the upper scope.","Identifier","noShadow","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'callback', 'getSize', and 'windowSize'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["73"],"React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has missing dependencies: 'handleResize' and 'isClient'. Either include them or remove the dependency array.",["74"],["71"],["72"],"no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},{"desc":"77","fix":"78"},"Update the dependencies array to be: [callback, getSize, windowSize]",{"range":"79","text":"80"},"Update the dependencies array to be: [handleResize, isClient]",{"range":"81","text":"82"},[590,592],"[callback, getSize, windowSize]",[999,1011],"[handleResize, isClient]"]